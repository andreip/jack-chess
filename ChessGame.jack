class ChessGame {
    field boolean exit;
    field Board board;
    field GamePlay gamePlay;
    static ChessGame instance;

    /* Singleton methods, don't call constructor directly. */
    function void newInstance() {
        let instance = ChessGame.new();
        return;
    }
    function ChessGame getInstance() {
        return instance;
    }

    constructor ChessGame new() {
        // set bottom left corner in the 32 x 16 grid.
        // knowing that the board will take 9 x 9 space.
        let board = Board.new(13, (32-9) / 2);

        // starts at same level as board and has a size of 8 pieces,
        // same as the chessboard.
        let gamePlay = GamePlay.new(
            22 * Utils.WORD(),
            5 * Utils.WORD(),
            Utils.CHESSN() * Utils.WORD(),
            board
        );
        let exit = false;
        return this;
    }

    method void dispose() {
        do board.dispose();
        do gamePlay.dispose();
        do Memory.deAlloc(this);
        return;
    }

    /* ChessGame loop */
    method void run() {
        var char key, crtKey;

        do shortcutsDraw();
        do board.draw();
        do gamePlay.draw();

        while (~exit) {
            // wait for key to be pressed.
            while ((key = 0) & (~exit)) {
                let key = Keyboard.keyPressed();
                do Sys.wait(50);
            }
            let crtKey = key;
            // Waits for the key to be released.
            while ((~(key = 0)) & (~exit)) {
                let key = Keyboard.keyPressed();
                do Sys.wait(50);
            }

            // TODO: disable prints here.
            do Output.printString("Pressed key ");
            do Output.printInt(crtKey);
            do Output.printString(" ");
            if (crtKey = Utils.LEFTARROWKEY()) {
                do Output.printString("left arrow");
            }
            if (crtKey = Utils.UPARROWKEY()) {
                do Output.printString("up arrow");
            }
            if (crtKey = Utils.RIGHTARROWKEY()) {
                do Output.printString("right arrow");
            }
            if (crtKey = Utils.DOWNARROWKEY()) {
                do Output.printString("down arrow");
            }
            if (crtKey = Utils.ESCKEY()) {
                do Output.printString("esc");
            }
            if (crtKey = Utils.SPACEKEY()) {
                do Output.printString("space");
            }
        }
        return;
    }

    method void shortcutsDraw() {
        var int n, i, rowStart;
        var Array msgs;

        let rowStart = 1;

        let n = 4;
        let msgs = Array.new(n);
        let msgs[0] = "Shortcuts:";
        let msgs[1] = "arrow keys: navigate between pieces to move";
        let msgs[2] = "space: select square to move a piece to/from";
        let msgs[3] = "escape: start a new game";

        let i = 0;
        while (i < n) {
            do Utils.printStringCentered(msgs[i], rowStart + i);
            let i = i + 1;
        }

        return;
    }
}
